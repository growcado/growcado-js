"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var _lodash = _interopRequireDefault(require("lodash"));
var _core = require("@verdaccio/core");
var _middleware = require("@verdaccio/middleware");
var _constants = require("../../../lib/constants");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _default(route, storage) {
  route.get(_middleware.STARS_API_ENDPOINTS.get_user_starred_packages, (req, res, next) => {
    // @ts-ignore
    const query = req.query;
    if (typeof (query === null || query === void 0 ? void 0 : query.key) !== 'string') {
      return next(_core.errorUtils.getBadRequest('missing query key username'));
    }

    // @ts-ignore
    storage.getLocalDatabase((err, localPackages) => {
      if (err) {
        return next(err);
      }
      const filteredPackages = localPackages.filter(localPackage => _lodash.default.keys(localPackage[_constants.USERS]).includes(query === null || query === void 0 ? void 0 : query.key.toString().replace(/['"]+/g, '')));
      res.status(_constants.HTTP_STATUS.OK);
      next({
        rows: filteredPackages.map(filteredPackage => ({
          value: filteredPackage.name
        }))
      });
    });
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbG9kYXNoIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29yZSIsIl9taWRkbGV3YXJlIiwiX2NvbnN0YW50cyIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9kZWZhdWx0Iiwicm91dGUiLCJzdG9yYWdlIiwiZ2V0IiwiU1RBUlNfQVBJX0VORFBPSU5UUyIsImdldF91c2VyX3N0YXJyZWRfcGFja2FnZXMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicXVlcnkiLCJrZXkiLCJlcnJvclV0aWxzIiwiZ2V0QmFkUmVxdWVzdCIsImdldExvY2FsRGF0YWJhc2UiLCJlcnIiLCJsb2NhbFBhY2thZ2VzIiwiZmlsdGVyZWRQYWNrYWdlcyIsImZpbHRlciIsImxvY2FsUGFja2FnZSIsIl8iLCJrZXlzIiwiVVNFUlMiLCJpbmNsdWRlcyIsInRvU3RyaW5nIiwicmVwbGFjZSIsInN0YXR1cyIsIkhUVFBfU1RBVFVTIiwiT0siLCJyb3dzIiwibWFwIiwiZmlsdGVyZWRQYWNrYWdlIiwidmFsdWUiLCJuYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FwaS9lbmRwb2ludC9hcGkvc3RhcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzcG9uc2UsIFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IHsgZXJyb3JVdGlscyB9IGZyb20gJ0B2ZXJkYWNjaW8vY29yZSc7XG5pbXBvcnQgeyBTVEFSU19BUElfRU5EUE9JTlRTIH0gZnJvbSAnQHZlcmRhY2Npby9taWRkbGV3YXJlJztcbmltcG9ydCB7IE1hbmlmZXN0LCBWZXJzaW9uIH0gZnJvbSAnQHZlcmRhY2Npby90eXBlcyc7XG5cbmltcG9ydCB7IEhUVFBfU1RBVFVTLCBVU0VSUyB9IGZyb20gJy4uLy4uLy4uL2xpYi9jb25zdGFudHMnO1xuaW1wb3J0IFN0b3JhZ2UgZnJvbSAnLi4vLi4vLi4vbGliL3N0b3JhZ2UnO1xuaW1wb3J0IHsgJE5leHRGdW5jdGlvblZlciwgJFJlcXVlc3RFeHRlbmQgfSBmcm9tICcuLi8uLi8uLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChyb3V0ZTogUm91dGVyLCBzdG9yYWdlOiBTdG9yYWdlKTogdm9pZCB7XG4gIHJvdXRlLmdldChcbiAgICBTVEFSU19BUElfRU5EUE9JTlRTLmdldF91c2VyX3N0YXJyZWRfcGFja2FnZXMsXG4gICAgKHJlcTogJFJlcXVlc3RFeHRlbmQsIHJlczogUmVzcG9uc2UsIG5leHQ6ICROZXh0RnVuY3Rpb25WZXIpOiB2b2lkID0+IHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbnN0IHF1ZXJ5OiB7IGtleTogc3RyaW5nIH0gPSByZXEucXVlcnk7XG4gICAgICBpZiAodHlwZW9mIHF1ZXJ5Py5rZXkgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBuZXh0KGVycm9yVXRpbHMuZ2V0QmFkUmVxdWVzdCgnbWlzc2luZyBxdWVyeSBrZXkgdXNlcm5hbWUnKSk7XG4gICAgICB9XG5cbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHN0b3JhZ2UuZ2V0TG9jYWxEYXRhYmFzZSgoZXJyLCBsb2NhbFBhY2thZ2VzOiBWZXJzaW9uW10pID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBmaWx0ZXJlZFBhY2thZ2VzOiBWZXJzaW9uW10gPSBsb2NhbFBhY2thZ2VzLmZpbHRlcigobG9jYWxQYWNrYWdlOiBWZXJzaW9uKSA9PlxuICAgICAgICAgIF8ua2V5cyhsb2NhbFBhY2thZ2VbVVNFUlNdKS5pbmNsdWRlcyhxdWVyeT8ua2V5LnRvU3RyaW5nKCkucmVwbGFjZSgvWydcIl0rL2csICcnKSlcbiAgICAgICAgKTtcblxuICAgICAgICByZXMuc3RhdHVzKEhUVFBfU1RBVFVTLk9LKTtcbiAgICAgICAgbmV4dCh7XG4gICAgICAgICAgcm93czogZmlsdGVyZWRQYWNrYWdlcy5tYXAoKGZpbHRlcmVkUGFja2FnZTogVmVyc2lvbikgPT4gKHtcbiAgICAgICAgICAgIHZhbHVlOiBmaWx0ZXJlZFBhY2thZ2UubmFtZSxcbiAgICAgICAgICB9KSksXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxLQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFHQSxJQUFBRyxVQUFBLEdBQUFILE9BQUE7QUFBNEQsU0FBQUQsdUJBQUFLLENBQUEsV0FBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBRSxPQUFBLEVBQUFGLENBQUE7QUFJN0MsU0FBQUcsU0FBVUMsS0FBYSxFQUFFQyxPQUFnQixFQUFRO0VBQzlERCxLQUFLLENBQUNFLEdBQUcsQ0FDUEMsK0JBQW1CLENBQUNDLHlCQUF5QixFQUM3QyxDQUFDQyxHQUFtQixFQUFFQyxHQUFhLEVBQUVDLElBQXNCLEtBQVc7SUFDcEU7SUFDQSxNQUFNQyxLQUFzQixHQUFHSCxHQUFHLENBQUNHLEtBQUs7SUFDeEMsSUFBSSxRQUFPQSxLQUFLLGFBQUxBLEtBQUssdUJBQUxBLEtBQUssQ0FBRUMsR0FBRyxNQUFLLFFBQVEsRUFBRTtNQUNsQyxPQUFPRixJQUFJLENBQUNHLGdCQUFVLENBQUNDLGFBQWEsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQ3JFOztJQUVBO0lBQ0FWLE9BQU8sQ0FBQ1csZ0JBQWdCLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxhQUF3QixLQUFLO01BQzFELElBQUlELEdBQUcsRUFBRTtRQUNQLE9BQU9OLElBQUksQ0FBQ00sR0FBRyxDQUFDO01BQ2xCO01BRUEsTUFBTUUsZ0JBQTJCLEdBQUdELGFBQWEsQ0FBQ0UsTUFBTSxDQUFFQyxZQUFxQixJQUM3RUMsZUFBQyxDQUFDQyxJQUFJLENBQUNGLFlBQVksQ0FBQ0csZ0JBQUssQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQ2IsS0FBSyxhQUFMQSxLQUFLLHVCQUFMQSxLQUFLLENBQUVDLEdBQUcsQ0FBQ2EsUUFBUSxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FDbEYsQ0FBQztNQUVEakIsR0FBRyxDQUFDa0IsTUFBTSxDQUFDQyxzQkFBVyxDQUFDQyxFQUFFLENBQUM7TUFDMUJuQixJQUFJLENBQUM7UUFDSG9CLElBQUksRUFBRVosZ0JBQWdCLENBQUNhLEdBQUcsQ0FBRUMsZUFBd0IsS0FBTTtVQUN4REMsS0FBSyxFQUFFRCxlQUFlLENBQUNFO1FBQ3pCLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQ0YsQ0FBQztBQUNIIiwiaWdub3JlTGlzdCI6W119