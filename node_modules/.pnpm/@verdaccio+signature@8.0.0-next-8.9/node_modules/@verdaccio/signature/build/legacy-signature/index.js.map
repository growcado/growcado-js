{"version":3,"file":"index.js","names":["_crypto","require","_debug","_interopRequireDefault","_core","e","__esModule","default","defaultAlgorithm","exports","debug","buildDebug","aesEncryptDeprecated","buf","secret","c","createCipher","b1","update","b2","final","Buffer","concat","aesDecryptDeprecated","createDecipher","_","alloc","TOKEN_VALID_LENGTH_DEPRECATED","generateRandomSecretKeyDeprecated","cryptoUtils","generateRandomHexString"],"sources":["../../src/legacy-signature/index.ts"],"sourcesContent":["import { createCipher, createDecipher } from 'crypto';\nimport buildDebug from 'debug';\n\nimport { cryptoUtils } from '@verdaccio/core';\n\nexport const defaultAlgorithm = 'aes192';\n\nconst debug = buildDebug('verdaccio:auth:token:legacy:deprecated');\n\n/**\n *\n * @param buf\n * @param secret\n * @returns\n */\nexport function aesEncryptDeprecated(buf: Buffer, secret: string): Buffer {\n  debug('aesEncryptDeprecated init');\n  debug('algorithm %o', defaultAlgorithm);\n  // deprecated (it will be removed in Verdaccio 6), it is a breaking change\n  // https://nodejs.org/api/crypto.html#crypto_crypto_createcipher_algorithm_password_options\n  // https://www.grainger.xyz/changing-from-cipher-to-cipheriv/\n  const c = createCipher(defaultAlgorithm, secret);\n  const b1 = c.update(buf);\n  const b2 = c.final();\n  debug('deprecated legacy token generated successfully');\n  return Buffer.concat([b1, b2]);\n}\n\n/**\n *\n * @param buf\n * @param secret\n * @returns\n */\nexport function aesDecryptDeprecated(buf: Buffer, secret: string): Buffer {\n  try {\n    debug('aesDecryptDeprecated init');\n    // https://nodejs.org/api/crypto.html#crypto_crypto_createdecipher_algorithm_password_options\n    // https://www.grainger.xyz/changing-from-cipher-to-cipheriv/\n    const c = createDecipher(defaultAlgorithm, secret);\n    const b1 = c.update(buf);\n    const b2 = c.final();\n    debug('deprecated legacy token payload decrypted successfully');\n    return Buffer.concat([b1, b2]);\n  } catch (_) {\n    return Buffer.alloc(0);\n  }\n}\n\nexport const TOKEN_VALID_LENGTH_DEPRECATED = 64;\n\n/**\n * Generate a secret key of 64 characters.\n */\nexport function generateRandomSecretKeyDeprecated(): string {\n  return cryptoUtils.generateRandomHexString(6);\n}\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,KAAA,GAAAH,OAAA;AAA8C,SAAAE,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEvC,MAAMG,gBAAgB,GAAAC,OAAA,CAAAD,gBAAA,GAAG,QAAQ;AAExC,MAAME,KAAK,GAAG,IAAAC,cAAU,EAAC,wCAAwC,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,oBAAoBA,CAACC,GAAW,EAAEC,MAAc,EAAU;EACxEJ,KAAK,CAAC,2BAA2B,CAAC;EAClCA,KAAK,CAAC,cAAc,EAAEF,gBAAgB,CAAC;EACvC;EACA;EACA;EACA,MAAMO,CAAC,GAAG,IAAAC,oBAAY,EAACR,gBAAgB,EAAEM,MAAM,CAAC;EAChD,MAAMG,EAAE,GAAGF,CAAC,CAACG,MAAM,CAACL,GAAG,CAAC;EACxB,MAAMM,EAAE,GAAGJ,CAAC,CAACK,KAAK,CAAC,CAAC;EACpBV,KAAK,CAAC,gDAAgD,CAAC;EACvD,OAAOW,MAAM,CAACC,MAAM,CAAC,CAACL,EAAE,EAAEE,EAAE,CAAC,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,oBAAoBA,CAACV,GAAW,EAAEC,MAAc,EAAU;EACxE,IAAI;IACFJ,KAAK,CAAC,2BAA2B,CAAC;IAClC;IACA;IACA,MAAMK,CAAC,GAAG,IAAAS,sBAAc,EAAChB,gBAAgB,EAAEM,MAAM,CAAC;IAClD,MAAMG,EAAE,GAAGF,CAAC,CAACG,MAAM,CAACL,GAAG,CAAC;IACxB,MAAMM,EAAE,GAAGJ,CAAC,CAACK,KAAK,CAAC,CAAC;IACpBV,KAAK,CAAC,wDAAwD,CAAC;IAC/D,OAAOW,MAAM,CAACC,MAAM,CAAC,CAACL,EAAE,EAAEE,EAAE,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOM,CAAC,EAAE;IACV,OAAOJ,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;EACxB;AACF;AAEO,MAAMC,6BAA6B,GAAAlB,OAAA,CAAAkB,6BAAA,GAAG,EAAE;;AAE/C;AACA;AACA;AACO,SAASC,iCAAiCA,CAAA,EAAW;EAC1D,OAAOC,iBAAW,CAACC,uBAAuB,CAAC,CAAC,CAAC;AAC/C","ignoreList":[]}