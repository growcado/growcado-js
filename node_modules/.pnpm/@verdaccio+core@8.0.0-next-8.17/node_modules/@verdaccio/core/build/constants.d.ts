export declare const DEFAULT_PASSWORD_VALIDATION: RegExp;
export declare const TIME_EXPIRATION_24H = "24h";
export declare const TIME_EXPIRATION_1H = "1h";
export declare const DIST_TAGS = "dist-tags";
export declare const LATEST = "latest";
export declare const USERS = "users";
export declare const MAINTAINERS = "maintainers";
export declare const DEFAULT_USER = "Anonymous";
export declare const HEADER_TYPE: {
    CONTENT_ENCODING: string;
    CONTENT_TYPE: string;
    CONTENT_LENGTH: string;
    ACCEPT_ENCODING: string;
    AUTHORIZATION: string;
};
export declare const CHARACTER_ENCODING: {
    UTF8: string;
};
export declare const TOKEN_BASIC = "Basic";
export declare const TOKEN_BEARER = "Bearer";
export declare const HEADERS: {
    ACCEPT: string;
    ACCEPT_ENCODING: string;
    USER_AGENT: string;
    JSON: string;
    CONTENT_TYPE: string;
    CONTENT_LENGTH: string;
    TEXT_PLAIN: string;
    TEXT_PLAIN_UTF8: string;
    TEXT_HTML_UTF8: string;
    TEXT_HTML: string;
    AUTHORIZATION: string;
    CACHE_CONTROL: string;
    RETRY_AFTER: string;
    FORWARDED_PROTO: string;
    FORWARDED_FOR: string;
    FRAMES_OPTIONS: string;
    CSP: string;
    CTO: string;
    XSS: string;
    CLIENT: string;
    POWERED_BY: string;
    RATELIMIT_LIMIT: string;
    RATELIMIT_REMAINING: string;
    NONE_MATCH: string;
    ETAG: string;
    JSON_CHARSET: string;
    JSON_INSTALL_CHARSET: string;
    OCTET_STREAM: string;
    TEXT_CHARSET: string;
    WWW_AUTH: string;
    GZIP: string;
    HOST: string;
};
/**
 * HTTP status codes used throughout Verdaccio.
 */
export declare const HTTP_STATUS: {
    /** 202: The request has been accepted for processing, but the processing is not yet complete. */
    ACCEPTED: number;
    /** 200: Standard response for successful HTTP requests. */
    OK: number;
    /** 201: The request has been fulfilled and resulted in a new resource being created. */
    CREATED: number;
    /** 300: Indicates multiple options for the resource from which the client may choose. */
    MULTIPLE_CHOICES: number;
    /** 304: Indicates that the resource has not been modified since the last request. */
    NOT_MODIFIED: number;
    /** 400: The server could not understand the request due to invalid syntax. */
    BAD_REQUEST: number;
    /** 401: The client must authenticate itself to get the requested response. */
    UNAUTHORIZED: number;
    /** 403: The client does not have access rights to the content. */
    FORBIDDEN: number;
    /** 404: The server can not find the requested resource. */
    NOT_FOUND: number;
    /** 408: The server timed out waiting for the request. */
    REQUEST_TIMEOUT: number;
    /** 409: The request could not be completed due to a conflict with the current state of the resource. */
    CONFLICT: number;
    /** 415: The media format of the requested data is not supported by the server. */
    UNSUPPORTED_MEDIA: number;
    /** 422: The request was well-formed but was unable to be followed due to semantic errors. */
    BAD_DATA: number;
    /** 500: The server has encountered a situation it doesn't know how to handle. */
    INTERNAL_ERROR: number;
    /** 501: The request method is not supported by the server and cannot be handled. */
    NOT_IMPLEMENTED: number;
    /** 502: The server, while acting as a gateway or proxy, received an invalid response from the upstream server. */
    BAD_GATEWAY: number;
    /** 503: The server is not ready to handle the request. */
    SERVICE_UNAVAILABLE: number;
    /** 504: The server, while acting as a gateway or proxy, did not get a response in time from the upstream server. */
    GATEWAY_TIMEOUT: number;
    /** 508: The server detected an infinite loop while processing the request. */
    LOOP_DETECTED: number;
    /** 590: Custom Verdaccio code indicating the server cannot handle the request. */
    CANNOT_HANDLE: number;
};
export declare const ERROR_CODE: {
    token_required: string;
};
export declare const API_MESSAGE: {
    PKG_CREATED: string;
    PKG_CHANGED: string;
    PKG_REMOVED: string;
    PKG_PUBLISHED: string;
    TARBALL_UPLOADED: string;
    TARBALL_REMOVED: string;
    TAG_UPDATED: string;
    TAG_REMOVED: string;
    TAG_ADDED: string;
    OK: string;
    LOGGED_OUT: string;
};
export declare const LOG_STATUS_MESSAGE = "@{status}, user: @{user}(@{remoteIP}), req: '@{request.method} @{request.url}'";
export declare const LOG_VERDACCIO_ERROR = "@{status}, user: @{user}(@{remoteIP}), req: '@{request.method} @{request.url}', error: @{!error}";
export declare const LOG_VERDACCIO_BYTES = "@{status}, user: @{user}(@{remoteIP}), req: '@{request.method} @{request.url}', bytes: @{bytes.in}/@{bytes.out}";
export declare const ROLES: {
    $ALL: string;
    ALL: string;
    $AUTH: string;
    $ANONYMOUS: string;
    DEPRECATED_ALL: string;
    DEPRECATED_AUTH: string;
    DEPRECATED_ANONYMOUS: string;
};
export declare const PACKAGE_ACCESS: {
    SCOPE: string;
    ALL: string;
};
export declare enum HtpasswdHashAlgorithm {
    md5 = "md5",
    sha1 = "sha1",
    crypt = "crypt",
    bcrypt = "bcrypt"
}
export declare const PLUGIN_PREFIX = "verdaccio";
export declare const PLUGIN_UI_PREFIX = "verdaccio-theme";
export declare const PLUGIN_CATEGORY: {
    AUTHENTICATION: string;
    MIDDLEWARE: string;
    STORAGE: string;
    FILTER: string;
    THEME: string;
};
